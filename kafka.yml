version: '3.7'

networks:
  bigdata_network:
    driver: bridge
    external: true

services:  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      TZ: America/Mexico_City
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s
    networks:
      - bigdata_network
  broker-kafka:
    image: confluentinc/cp-kafka:7.4.0    
    hostname: broker-kafka
    container_name: broker-kafka
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:      
      KAFKA_HEAP_OPTS: "-Xms2g -Xmx4g -XX:MaxDirectMemorySize=3g"
      KAFKA_JVM_PERFORMANCE_OPTS: >-
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=20
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -Djava.awt.headless=true

      
      KAFKA_MESSAGE_MAX_BYTES: "104857600"        
      KAFKA_REPLICA_FETCH_MAX_BYTES: "104857600"  
      KAFKA_FETCH_MAX_BYTES: "104857600"          
      KAFKA_SOCKET_REQUEST_MAX_BYTES: "104857600" 
      
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: "2097152"
      KAFKA_SOCKET_SEND_BUFFER_BYTES: "2097152"   
      
      KAFKA_NUM_NETWORK_THREADS: "6"
      KAFKA_NUM_IO_THREADS: "12"
      KAFKA_NUM_REPLICA_FETCHERS: "1"
      
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_NUM_PARTITIONS: "3"
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker-kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_BYTES: "53687091200"  
      KAFKA_LOG_SEGMENT_BYTES: "1073741824"     
      KAFKA_LOG_RETENTION_HOURS: "168"          
      KAFKA_LOG_CLEANUP_POLICY: "delete"

      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "localhost"
      TZ: "America/Mexico_City"
    healthcheck:
      test: nc -z broker-kafka 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - bigdata_network
    deploy:
      resources:
        limits:
          memory: 6g
          cpus: '2'
  
#  control-center:
#    image: confluentinc/cp-enterprise-control-center:7.4.0
#    hostname: control-center
#    container_name: control-center
#    depends_on:
#      broker-kafka:
#        condition: service_healthy
#    ports:
#      - "9021:9021"
#    environment:
#      TZ: America/Mexico_City
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker-kafka:29092'
#      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
#      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
#      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
#      CONFLIENT_METRICS_ENABLE: 'false'
#      PORT: 9021
#    networks:
#      - bigdata_network
#    command: >
#      bash -c "
#      while ! curl -sf http://broker-kafka:9092/ >/dev/null; do
#        echo 'Esperando a broker...';
#        sleep 5;
#      done;"
#    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://control-center:9021/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5

#  debezium:
#    image: debezium/connect:2.5
#    container_name: debezium
#    hostname: debezium
#    depends_on:
#      postgres:
#        condition: service_healthy
#      broker-kafka:
#        condition: service_healthy
#    ports:
#      - '8093:8083'
#    environment:
#      TZ: America/Mexico_City
#      BOOTSTRAP_SERVERS: broker-kafka:29092
#      CONNECT_REST_ADVERTISED_HOST_NAME: debezium
#      GROUP_ID: 1
#      CONFIG_STORAGE_TOPIC: connect_configs
#      STATUS_STORAGE_TOPIC: connect_statuses
#      OFFSET_STORAGE_TOPIC: connect_offsets
#      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      ENABLE_DEBEZIUM_SCRIPTING: 'true'
#    healthcheck:
#      test:
#        [ 'CMD', 'curl', '--silent', '--fail', '-X', 'GET', 'http://debezium:8083/connectors', ]
#      start_period: 10s
#      interval: 10s
#      timeout: 5s
#      retries: 5    
#    networks:
#      - bigdata_network

#  debezium-ui:
#    image: debezium/debezium-ui:latest
#    container_name: debezium-ui
#    hostname: debezium-ui
#    depends_on:
#      debezium:
#        condition: service_healthy
#    ports:
#      - '8080:8080'
#    environment:
#      TZ: America/Mexico_City
#      KAFKA_CONNECT_URIS: http://debezium:8083
#    networks:
#      - bigdata_network